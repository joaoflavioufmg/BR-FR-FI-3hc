# ======================================================
# Model: Hierarchical health care design : 3 levels (brown field)
# Joao Flavio F. Almeida <joao.flavio@dep.ufmg.br >
# Fabricio Oliveira <fabricio.oliveira@aalto.fi >
# Data   : 24/08/2022
# Versao: 1.0:
# =========================================================
# ===============================================
# modelo e dados a serem usados
# ===============================================
# reset data; 

/* model hc_glpk.mod; */


# model hc_ampl.mod;

# data hc.dat;
# data 11_dados.dat;
# data 11_dist_dur.txt; 


# display Dist_Max;
# display card(I);
# display Pop_Total;
# display Pop_Max;

# check;
# ===============================================
# solver a ser usado
# ===============================================
# Se:
#   Permission denied
# Entao:
#   cd /home/joao/Dropbox/05-Softwares/01-Otimizacao/03-AMPL/00-AMPL/ampl/
#   sudo chmod +x ampl
#   sudo chmod +x gurobi

# Linux
# option solver gurobi;
# option solver './gurobi'; # gurobi na mesma pasta dos outros arquivos ou...
# option solver '/home/joao/Dropbox/05-Softwares/01-Otimizacao/03-AMPL/00-AMPL/ampl/gurobi';

# Windows
option solver gurobi;
option gurobi_options $gurobi_options
#    'lpmethod 1'
#   'mipfocus 1'
#   'presparsify 1'
#   'presolve 1'
#   'mipgap 1.e-9'
#   'mipgap 0.01'
  'outlev 1'
#   'threads 1'
  'timing 1'
  'timelim 3600'
#   'pivtol 0.1'
#   'intfeastol 1.e-9'
#   'numericfocus 2'
#  'Cuts 0'
   'logfile hc_log.log'
  ;

########################################################
# display EXT1;

solve;

/* printf{i in I,n in NA,e in E}: "%s,%d,%d,%.2f\n", i,n,e,Q[i,n,e] > 'Q.csv';
printf{n in NA, j in J1, e in E: n=1 and DEM[n,e] > 0}: "%s,%d,%d,%.2f\n", n,j,e,xd1[n,j,e] > 'xd1.csv';
printf{n in NA, k in J2, e in E: n=2 and DEM[n,e] > 0}: "%s,%d,%d,%.2f\n", n,k,e,xd2[n,k,e] > 'xd2.csv'; */

check{n in NA, i in I, j in N1[i]: n=1 and x[n,i,j].val > 0}: POP[j]*x[n,i,j].val >= POPmin[n];
check{n in NA, j in J1, k in N2[j]: n=2 and x[n,j,k].val > 0}: POP[k]*x[n,j,k].val >= POPmin[n];
check{n in NA, k in J2, l in N3[k]: n=3 and x[n,k,l].val > 0}: POP[l]*x[n,k,l].val >= POPmin[n];


# display EXT1;
# display EXT2;
# display EXT3;


printf "%s\n\n", "Optimization settings:" > "Resultado/00-Notes.txt";

printf "%s\n", "----------------------------------------" >> "Resultado/00-Notes.txt";
printf "%-20s\t%16.2f\n", "Objective Function:", of >> "Resultado/00-Notes.txt";
printf "%-20s\t%16.2f\n", "Primary   Care Cost:", 
sum{n in NA, i in I, j in N1[i]: n=1} HC[n]*POP[i]*x[n,i,j] >> "Resultado/00-Notes.txt";
printf "%-20s\t%16.2f\n", "Secondary Care Cost:", 
sum{n in NA, j in J1, k in N2[j]: n=2} HC[n]*POP[j]*x[n,j,k] >> "Resultado/00-Notes.txt";
printf "%-20s\t%16.2f\n", "Tertiary  Care Cost:", 
sum{n in NA, k in J2, l in N3[k]: n=3} HC[n]*POP[k]*x[n,k,l] >> "Resultado/00-Notes.txt";
printf "%-20s\t%16.2f\n", "Add Infrastruc Cost:", 
sum{n in NA, j in J} CI[n]*INFR[j]*z[n,j] >> "Resultado/00-Notes.txt";
printf "%-20s\t%16.2f\n", "Patient Logist Cost:", 
sum{n in NA, i in I, j in N1[i]: n=1 and i <> j} f1[i,j]*D[i,j]*POP[i]*x[n,i,j]
+ sum{n in NA, j in J1, k in N2[j]: n=2 and j <> k} f2[j,k]*D[j,k]*POP[j]*x[n,j,k]
+ sum{n in NA, k in J2, l in N3[k]: n=3 and k <> l} f3[k,l]*D[k,k]*POP[k]*x[n,k,l] >> "Resultado/00-Notes.txt";
printf "%-20s\t%16.2f\n", "Logistics Pen. Cost:", 
sum{n in NA, i in I, j in N1[i]: n=1 and i <> j} P*POP[i]*ex[n,i,j]
	+ sum{n in NA, j in J1, k in N2[j]: n=2 and j <> k} P*POP[j]*ex[n,j,k]
	+ sum{n in NA, k in J2, l in N3[k]: n=3 and k <> l} P*POP[k]*ex[n,k,l] >> "Resultado/00-Notes.txt";
printf "%-25s\t%12.2f\n", "HC Cost per capita (now):", 
(sum{n in NA, i in I, j in N1[i]: n=1} HC[n]*POP[i]*x[n,i,j]+
sum{n in NA, j in J1, k in N2[j]: n=2} HC[n]*POP[j]*x[n,j,k]+
sum{n in NA, k in J2, l in N3[k]: n=3} HC[n]*POP[k]*x[n,k,l])/Pop_Total >> "Resultado/00-Notes.txt";
printf "%-25s\t%12.2f\n", "HC Cost per capita (fut):", 
of/Pop_Total >> "Resultado/00-Notes.txt";

printf "%s\n\n", "----------------------------------------" >> "Resultado/00-Notes.txt";

printf "%s\n", "-----------------------------------" >> "Resultado/00-Notes.txt";
printf "%s\t%d\n", "State population:", Pop_Total >> "Resultado/00-Notes.txt";
printf "%s\t%d\n", "Max municipa pop:", Pop_Max >> "Resultado/00-Notes.txt";
printf "%s\t%d\n", "Min municipa pop:", Pop_Min >> "Resultado/00-Notes.txt";
printf "%s\n", "-----------------------------------" >> "Resultado/00-Notes.txt";

printf "%s\t%s\t%s\n%s\n", "Care Level", "Pop. Min", "Dur. Max(h).",
"-----------------------------------" >> "Resultado/00-Notes.txt";
printf{n in NA}: "[%d]\t\t\t%-7d\t\t%.2f\n", n, POPmin[n], DurUpper[n] >> "Resultado/00-Notes.txt";
printf "%s\n", "-----------------------------------" >> "Resultado/00-Notes.txt";

printf "\n\nDemand met by level: (Estate has %d municipalities).\n%s\n", card(I),
"----------------------------------------------------------------" >> "Resultado/00-Notes.txt";

printf{n in NA: n = 1} "Care Level [%d]: %3d mun > %3d mun (%.2f%% coverage)\n", n, sum{i in I, j in N1[i]}x[n,i,j], sum{j in J1}z[n,j],
100*(sum{i in I, j in N1[i]}x[n,i,j])/card(I)>> "Resultado/00-Notes.txt";
printf{n in NA: n = 2}"Care Level [%d]: %3d mun > %3d mun\n", n, sum{i in J1, j in N2[i]}x[n,i,j], sum{j in J2}z[n,j] >> "Resultado/00-Notes.txt";
printf{n in NA: n = 3}"Care Level [%d]: %3d mun > %3d mun\n", n, sum{i in J2, j in N3[i]}x[n,i,j], sum{j in J3}z[n,j] >> "Resultado/00-Notes.txt";
printf "%s\n", "----------------------------------------------------------------" >> "Resultado/00-Notes.txt";

printf "\nMunicipalities requiring a custom solution:\n" >> "Resultado/00-Notes.txt";
printf "%s\n", "----------------------------------------------------------------" >> "Resultado/00-Notes.txt";
printf "LEVEL\tCODE\tDESCRIPTION\t\t\t\t\tCLOSEST(h)\n" >> "Resultado/00-Notes.txt";
printf{i in EX1}: "%5d\t%d\t%-25s:\t%.2f\n",1, i, Mun[i], EXT1[i] >> "Resultado/00-Notes.txt";
printf{i in EX2}: "%5d\t%d\t%-25s:\t%.2f\n",2, i, Mun[i], EXT2[i] >> "Resultado/00-Notes.txt";
printf{i in EX3}: "%5d\t%d\t%-25s:\t%.2f\n",3, i, Mun[i], EXT3[i] >> "Resultado/00-Notes.txt";
printf "%s\n", "----------------------------------------------------------------" >> "Resultado/00-Notes.txt";


param POPN1{n in NA,j in J1: n=1} := sum{i in I: j in N1[i]}POP[i]*x[n,i,j].val;
param POPN2{n in NA,k in J2: n=2} := sum{j in J1: k in N2[j]}POPN1[n-1,j]*x[n,j,k].val;
param POPN3{n in NA,l in J3: n=3} := sum{k in J2: l in N3[k]}POPN2[n-1,k]*x[n,k,l].val;

/* check: sum{n in NA, j in J1:n=1}POPN1[n,j] = sum{n in NA, k in J2:n=2}POPN2[n,k];
check: sum{n in NA, j in J1:n=1}POPN1[n,j] = sum{n in NA, l in J3:n=3}POPN3[n,l];
check: sum{n in NA, k in J2:n=2}POPN2[n,k] = sum{n in NA, l in J3:n=3}POPN3[n,l]; */

/* display POPN1;
display POPN2;
display POPN3; */


/* printf "\nNivel 1: Atribuicao municipio x CEM (Tipo 1)\n";
printf "-------------------------------------------------------------------------------\n"; */
printf "%s\t%30s\t%s\t%30s\t%15s\n", "CODIGO_O", "ORIGEM", "CODIGO_D", "DESTINO", "DISTANCIA"
> "Resultado/01-Atribuicao-Nivel-1.txt";
# printf "-------------------------------------------------------------------------------\n";
for{n in NA, j in J1, i in I: n = 1 and i in NAE[n,j] and j in N1[i]} if (z[n,j] > 0.9 and x[n,i,j] > 0.9) then
printf "%d\t%30s\t%d\t%30s\t%8.2f\n", i, Mun[i], j, Mun[j], x[n,i,j]*D[i,j]
>> "Resultado/01-Atribuicao-Nivel-1.txt";
# printf "-------------------------------------------------------------------------------\n";

printf "%s,%s,%s,%s,%s,%s\n", "CODIGO_O", "ORIGEM", "CODIGO_D", "DESTINO", "DISTANCIA", "NIVEL"
> "Resultado/01-Atribuicao-Nivel-1.csv";
for{n in NA, j in J1, i in I: n = 1 and i in NAE[n,j] and j in N1[i]} if (z[n,j] > 0.9 and x[n,i,j] > 0.9) then
printf "%d,%s,%d,%s,%.2f,%d\n", i, Mun[i], j, Mun[j], x[n,i,j]*D[i,j],1
>> "Resultado/01-Atribuicao-Nivel-1.csv";


/* printf "\nNivel 2 : Atribuicao municipio (CEM Tipo 1) x CEM (Tipo 2) \n";
printf "-------------------------------------------------------------------------------\n"; */
printf "%s\t%30s\t%s\t%30s\t%15s\n", "CODIGO_O", "ORIGEM", "CODIGO_D", "DESTINO", "DISTANCIA"
> "Resultado/02-Atribuicao-Nivel-2.txt";
# printf "-------------------------------------------------------------------------------\n";
for{n in NA, j in J2, i in J1: n = 2 and i in NAE[n,j] and j in N2[i]} if (z[n,j] > 0.9 and x[n,i,j] > 0.9) then
printf "%d,%s,%d,%s,%.2f\n", i, Mun[i], j, Mun[j], x[n,i,j]*D[i,j]
>> "Resultado/02-Atribuicao-Nivel-2.txt";
# printf "-------------------------------------------------------------------------------\n";

printf "%s,%s,%s,%s,%s,%s\n", "CODIGO_O", "ORIGEM", "CODIGO_D", "DESTINO", "DISTANCIA", "NIVEL"
> "Resultado/02-Atribuicao-Nivel-2.csv";
# printf "-------------------------------------------------------------------------------\n";
for{n in NA, j in J2, i in J1: n = 2 and i in NAE[n,j] and j in N2[i]} if (z[n,j] > 0.9 and x[n,i,j] > 0.9) then
printf "%d,%s,%d,%s,%.2f,%d\n", i, Mun[i], j, Mun[j], x[n,i,j]*D[i,j],2
>> "Resultado/02-Atribuicao-Nivel-2.csv";
# printf "-------------------------------------------------------------------------------\n";


/* printf "\nNivel 3 : Atribuicao municipio (CEM Tipo 2) x CEM (Tipo 3)\n";
printf "-------------------------------------------------------------------------------\n"; */
printf "%s\t%30s\t%s\t%30s\t%15s\n", "CODIGO_O", "ORIGEM", "CODIGO_D", "DESTINO", "DISTANCIA"
> "Resultado/03-Atribuicao-Nivel-3.txt";
# printf "-------------------------------------------------------------------------------\n";
for{n in NA, j in J3, i in J2: n = 3 and i in NAE[n,j] and j in N3[i]} if (z[n,j] > 0.9 and x[n,i,j] > 0.9) then
printf "%d,%s,%d,%s,%.2f\n", i, Mun[i], j, Mun[j], x[n,i,j]*D[i,j]
>> "Resultado/03-Atribuicao-Nivel-3.txt";
# printf "-------------------------------------------------------------------------------\n";

printf "%s,%s,%s,%s,%s,%s\n", "CODIGO_O", "ORIGEM", "CODIGO_D", "DESTINO", "DISTANCIA", "NIVEL"
> "Resultado/03-Atribuicao-Nivel-3.csv";
# printf "-------------------------------------------------------------------------------\n";
for{n in NA, j in J3, i in J2: n = 3 and i in NAE[n,j] and j in N3[i]} if (z[n,j] > 0.9 and x[n,i,j] > 0.9) then
printf "%d,%s,%d,%s,%.2f,%d\n", i, Mun[i], j, Mun[j], x[n,i,j]*D[i,j],3
>> "Resultado/03-Atribuicao-Nivel-3.csv";


/* printf "-------------------------------------------------------------------------------\n"; */
printf "%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s", "NIVEL", "CODIGO", "DESTINO",
"POP ATENDIDA", "Physicians", "Nurses", "OtherCadres", "CommunityBased", "Beds", "CTScanner"
> "Resultado/04-Atend-Demanda-Nivel-1.txt";

printf "\t%s\t%s\t%s\n",
"MRIUnit", "Mammography", "Radiotherapy"
>> "Resultado/04-Atend-Demanda-Nivel-1.txt";
# printf "-------------------------------------------------------------------------------\n";
for{n in NA, j in J1: n = 1} if (z[n,j] > 0.9) then
printf "%s\t%.2f\t%.2f\t%.2f\t%.2f\t%.2f\t%.2f\t%.2f\t%.2f\t%.2f\t%.2f\n", 
# \t%.2f\t%.2f\t%.2f\t%.2f\t%.2f\t%.2f\t%.2f\n",
1,
j,
Mun[j],
sum{i in I: i in NAE[n,j] and j in N1[i] and n=1}POP[i]*x[n,i,j],
sum{i in I: i in NAE[n,j] and j in N1[i]}Q[i,n,1]*x[n,i,j],
sum{i in I: i in NAE[n,j] and j in N1[i]}Q[i,n,2]*x[n,i,j],
sum{i in I: i in NAE[n,j] and j in N1[i]}Q[i,n,3]*x[n,i,j],
sum{i in I: i in NAE[n,j] and j in N1[i]}Q[i,n,4]*x[n,i,j],
sum{i in I: i in NAE[n,j] and j in N1[i]}Q[i,n,5]*x[n,i,j],
sum{i in I: i in NAE[n,j] and j in N1[i]}Q[i,n,6]*x[n,i,j],
sum{i in I: i in NAE[n,j] and j in N1[i]}Q[i,n,7]*x[n,i,j],
sum{i in I: i in NAE[n,j] and j in N1[i]}Q[i,n,8]*x[n,i,j],
sum{i in I: i in NAE[n,j] and j in N1[i]}Q[i,n,9]*x[n,i,j]
# ,
# sum{i in I: i in NAE[n,j] and j in N1[i]}Q[i,n,10]*x[n,i,j],
# sum{i in I: i in NAE[n,j] and j in N1[i]}Q[i,n,11]*x[n,i,j],
# sum{i in I: i in NAE[n,j] and j in N1[i]}Q[i,n,12]*x[n,i,j],
# sum{i in I: i in NAE[n,j] and j in N1[i]}Q[i,n,13]*x[n,i,j],
# sum{i in I: i in NAE[n,j] and j in N1[i]}Q[i,n,14]*x[n,i,j],
# sum{i in I: i in NAE[n,j] and j in N1[i]}Q[i,n,15]*x[n,i,j],
# sum{i in I: i in NAE[n,j] and j in N1[i]}Q[i,n,16]*x[n,i,j]
>> "Resultado/04-Atend-Demanda-Nivel-1.txt";
# printf "-------------------------------------------------------------------------------\n";

printf "%s,%s,%s,%s,%s,%s,%s,%s,%s,%s", "NIVEL", "CODIGO", "DESTINO",
"POP ATENDIDA", "Physicians", "Nurses", "OtherCadres", "CommunityBased", "Beds", "CTScanner"
> "Resultado/04-Atend-Demanda-Nivel-1.csv";
printf ",%s,%s,%s\n",
# ,%s,%s,%s,%s,%s,%s,%s\n",
"MRIUnit", "Mammography", "Radiotherapy"
# , "OFTALMOLOGIA", "OTORRINOLARINGOLOGIA", "DERMATOLOGIA", "PNEUMOLOGIA", "REUMATOLOGIA", "UROLOGIA", "ORTOPEDIA"
>> "Resultado/04-Atend-Demanda-Nivel-1.csv";
# printf "-------------------------------------------------------------------------------\n";
for{n in NA, j in J1: n = 1} if (z[n,j] > 0.9) then
printf "%d,%s,%s,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f\n",
1,
j,
Mun[j],
sum{i in I: i in NAE[n,j] and j in N1[i] and n=1}POP[i]*x[n,i,j],
sum{i in I: i in NAE[n,j] and j in N1[i]}Q[i,n,1]*x[n,i,j],
sum{i in I: i in NAE[n,j] and j in N1[i]}Q[i,n,2]*x[n,i,j],
sum{i in I: i in NAE[n,j] and j in N1[i]}Q[i,n,3]*x[n,i,j],
sum{i in I: i in NAE[n,j] and j in N1[i]}Q[i,n,4]*x[n,i,j],
sum{i in I: i in NAE[n,j] and j in N1[i]}Q[i,n,5]*x[n,i,j],
sum{i in I: i in NAE[n,j] and j in N1[i]}Q[i,n,6]*x[n,i,j],
sum{i in I: i in NAE[n,j] and j in N1[i]}Q[i,n,7]*x[n,i,j],
sum{i in I: i in NAE[n,j] and j in N1[i]}Q[i,n,8]*x[n,i,j],
sum{i in I: i in NAE[n,j] and j in N1[i]}Q[i,n,9]*x[n,i,j]
>> "Resultado/04-Atend-Demanda-Nivel-1.csv";


/* printf "-------------------------------------------------------------------------------\n"; */
printf "%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s", "NIVEL", "CODIGO", "DESTINO",
"POP ATENDIDA", "Physicians", "Nurses", "OtherCadres", "CommunityBased", "Beds", "CTScanner"
> "Resultado/05-Atend-Demanda-Nivel-2.txt";
printf "\t%s\t%s\t%s\n",
"MRIUnit", "Mammography", "Radiotherapy"
>> "Resultado/05-Atend-Demanda-Nivel-2.txt";
# printf "-------------------------------------------------------------------------------\n";
for{n in NA, k in J2: n = 2} if (z[n,k] > 0.9) then
printf "%d\t%s\t%s\t%.2f\t%.2f\t%.2f\t%.2f\t%.2f\t%.2f\t%.2f\t%.2f\t%.2f\t%.2f\n", 
2,
k,
Mun[k],
sum{j in J1: k in N2[j] and n=2}POPN1[n-1,j]*x[n,j,k],
sum{j in J1: k in N2[j]}Q[j,n,1]*x[n,j,k],
sum{j in J1: k in N2[j]}Q[j,n,2]*x[n,j,k],
sum{j in J1: k in N2[j]}Q[j,n,3]*x[n,j,k],
sum{j in J1: k in N2[j]}Q[j,n,4]*x[n,j,k],
sum{j in J1: k in N2[j]}Q[j,n,5]*x[n,j,k],
sum{j in J1: k in N2[j]}Q[j,n,6]*x[n,j,k],
sum{j in J1: k in N2[j]}Q[j,n,7]*x[n,j,k],
sum{j in J1: k in N2[j]}Q[j,n,8]*x[n,j,k],
sum{j in J1: k in N2[j]}Q[j,n,9]*x[n,j,k]
>> "Resultado/05-Atend-Demanda-Nivel-2.txt";
# printf "-------------------------------------------------------------------------------\n";

printf "%s,%s,%s,%s,%s,%s,%s,%s,%s,%s", "NIVEL", "CODIGO", "DESTINO",
"POP ATENDIDA", "Physicians", "Nurses", "OtherCadres", "CommunityBased", "Beds", "CTScanner"
> "Resultado/05-Atend-Demanda-Nivel-2.csv";
printf ",%s,%s,%s\n",
"MRIUnit", "Mammography", "Radiotherapy"
>> "Resultado/05-Atend-Demanda-Nivel-2.csv";
# printf "-------------------------------------------------------------------------------\n";
for{n in NA, k in J2: n=2} if (z[n,k] > 0.9) then
printf "%d,%s,%s,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f\n",
2,
k,
Mun[k],
/* sum{j in J1: j in NAE[n,k] and k in N2[j] and n=2}POP[j]*x[n,j,k], */
sum{j in J1: k in N2[j] and n=2}POPN1[n-1,j]*x[n,j,k],
sum{j in J1: k in N2[j]}Q[j,n,1]*x[n,j,k],
sum{j in J1: k in N2[j]}Q[j,n,2]*x[n,j,k],
sum{j in J1: k in N2[j]}Q[j,n,3]*x[n,j,k],
sum{j in J1: k in N2[j]}Q[j,n,4]*x[n,j,k],
sum{j in J1: k in N2[j]}Q[j,n,5]*x[n,j,k],
sum{j in J1: k in N2[j]}Q[j,n,6]*x[n,j,k],
sum{j in J1: k in N2[j]}Q[j,n,7]*x[n,j,k],
sum{j in J1: k in N2[j]}Q[j,n,8]*x[n,j,k],
sum{j in J1: k in N2[j]}Q[j,n,9]*x[n,j,k]
>> "Resultado/05-Atend-Demanda-Nivel-2.csv";


/* printf "-------------------------------------------------------------------------------\n"; */
printf "%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s", "NIVEL", "CODIGO", "DESTINO",
"POP ATENDIDA", "Physicians", "Nurses", "OtherCadres", "CommunityBased", "Beds", "CTScanner"
> "Resultado/06-Atend-Demanda-Nivel-3.txt";
printf "\t%s\t%s\t%s\n",
"MRIUnit", "Mammography", "Radiotherapy"
>> "Resultado/06-Atend-Demanda-Nivel-3.txt";
# printf "-------------------------------------------------------------------------------\n";
for{n in NA, l in J3: n=3} if (z[n,l] > 0.9) then
printf "%d\t%s\t%s\t%.2f\t%.2f\t%.2f\t%.2f\t%.2f\t%.2f\t%.2f\t%.2f\t%.2f\t%.2f\n", 
3,
l,
Mun[l],
/* sum{k in J2: k in NAE[n,l] and l in N3[k] and n=3}POP[k]*x[n,k,l], */
sum{k in J2: l in N3[k] and n=3}POPN2[n-1,k]*x[n,k,l],
sum{k in J2: l in N3[k]}Q[k,n,1]*x[n,k,l],
sum{k in J2: l in N3[k]}Q[k,n,2]*x[n,k,l],
sum{k in J2: l in N3[k]}Q[k,n,3]*x[n,k,l],
sum{k in J2: l in N3[k]}Q[k,n,4]*x[n,k,l],
sum{k in J2: l in N3[k]}Q[k,n,5]*x[n,k,l],
sum{k in J2: l in N3[k]}Q[k,n,6]*x[n,k,l],
sum{k in J2: l in N3[k]}Q[k,n,7]*x[n,k,l],
sum{k in J2: l in N3[k]}Q[k,n,8]*x[n,k,l],
sum{k in J2: l in N3[k]}Q[k,n,9]*x[n,k,l]
>> "Resultado/06-Atend-Demanda-Nivel-3.txt";

printf "%s,%s,%s,%s,%s,%s,%s,%s,%s,%s", "NIVEL", "CODIGO", "DESTINO",
"POP ATENDIDA", "Physicians", "Nurses", "OtherCadres", "CommunityBased", "Beds", "CTScanner"
> "Resultado/06-Atend-Demanda-Nivel-3.csv";
printf ",%s,%s,%s\n",
"MRIUnit", "Mammography", "Radiotherapy"
>> "Resultado/06-Atend-Demanda-Nivel-3.csv";
# printf "-------------------------------------------------------------------------------\n";
for{n in NA, l in J3: n=3} if (z[n,l] > 0.9) then
printf "%d,%s,%s,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f\n",
3,
l,
Mun[l],
/* sum{k in J2: k in NAE[n,l] and l in N3[k] and n=3}POP[k]*x[n,k,l], */
sum{k in J2: l in N3[k] and n=3}POPN2[n-1,k]*x[n,k,l],
sum{k in J2: l in N3[k]}Q[k,n,1]*x[n,k,l],
sum{k in J2: l in N3[k]}Q[k,n,2]*x[n,k,l],
sum{k in J2: l in N3[k]}Q[k,n,3]*x[n,k,l],
sum{k in J2: l in N3[k]}Q[k,n,4]*x[n,k,l],
sum{k in J2: l in N3[k]}Q[k,n,5]*x[n,k,l],
sum{k in J2: l in N3[k]}Q[k,n,6]*x[n,k,l],
sum{k in J2: l in N3[k]}Q[k,n,7]*x[n,k,l],
sum{k in J2: l in N3[k]}Q[k,n,8]*x[n,k,l],
sum{k in J2: l in N3[k]}Q[k,n,9]*x[n,k,l]
>> "Resultado/06-Atend-Demanda-Nivel-3.csv";

printf "%s,%s,%s,%s,%s,%s,%s\n", "NIVEL", "CODIGO", "DESTINO",
"COD_ESP", "RECURSO", "POP ATENDIDA",  "ATEND_FTE"
> "Resultado/07-Atend-Demanda-Nivel-Especialidade.csv";

for{n in NA, j in J, e in E} if (z[n,j] > 0.9) then
printf "%d,%s,%s,%d,%s,%d,%.2f\n",
n,
j,
Mun[j],
e,
Res[e],
/* sum{i in I: i in NAE[n,j] and j in J}POP[i]*x[n,i,j], */
if n=1 then sum{i in I: i in NAE[n,j] and j in J}POP[i]*x[n,i,j]
else if n=2 then sum{i in J1: j in N2[i]}POPN1[n-1,i]*x[n,i,j]
else if n=3 then sum{i in J2: j in N3[i]}POPN2[n-1,i]*x[n,i,j],
if n=1 then sum{i in I: i in NAE[n,j] and j in N1[i]}Q[i,n,e]*x[n,i,j]
else if n=2 then sum{i in J1: j in N2[i]}Q[i,n,e]*x[n,i,j]
else if n=3 then sum{i in J2: j in N3[i]}Q[i,n,e]*x[n,i,j]
>> "Resultado/07-Atend-Demanda-Nivel-Especialidade.csv";
printf "-------------------------------------------------------------------------------\n\n";

printf "\n";
printf "Demand met by level: (State has %d municipalities).\n", card(I);
printf "-------------------------------------------------------------------------------\n";
printf{n in NA: n = 1} "Care Level [%d]: %d mun > %d mun (%.2f%% coverage)\n", n, sum{i in I, j in N1[i]}x[n,i,j], sum{j in J1}z[n,j],
100*(sum{i in I, j in N1[i]}x[n,i,j])/card(I);
/* 100*(sum{i in I, j in N1[i], e in E: i in NAE[n,j]}Q[i,n,e]*x[n,i,j])/(sum{i in I, e in E}Q[i,n,e]); */
printf{n in NA: n = 2}"Care Level [%d]: %d mun > %d mun\n", n, sum{i in J1, j in N2[i]}x[n,i,j], sum{j in J2}z[n,j];
printf{n in NA: n = 3}"Care Level [%d]: %d mun > %d mun\n", n, sum{i in J2, j in N3[i]}x[n,i,j], sum{j in J3}z[n,j];
printf "%s\n", "----------------------------------------------------------------";

printf "\nMunicipalities requiring a custom solution:\n";
printf "%s\n", "----------------------------------------------------------------";
printf "LEVEL\tCODE\tDESCRIPTION\t\t\tCLOSEST(h)\n";
printf{i in EX1}: "%5d\t%d\t%-25s:\t%.2f\n",1, i, Mun[i], EXT1[i];
printf{i in EX2}: "%5d\t%d\t%-25s:\t%.2f\n",2, i, Mun[i], EXT2[i];
printf{i in EX3}: "%5d\t%d\t%-25s:\t%.2f\n",3, i, Mun[i], EXT3[i];
printf "%s\n", "----------------------------------------------------------------";
printf "Exporting to file...\n\n";

end;
